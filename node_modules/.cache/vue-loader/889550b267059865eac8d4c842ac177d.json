{"remainingRequest":"D:\\working\\manage-system-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\working\\manage-system-ui\\src\\components\\tabs\\systemTabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\working\\manage-system-ui\\src\\components\\tabs\\systemTabs.vue","mtime":1560737482230},{"path":"D:\\working\\manage-system-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\manage-system-ui\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\working\\manage-system-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\manage-system-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { sessionFetch, sessionSave, tabsKey } from \"^/storage\"\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        editableTabs2: [{\r\n          title: 'label 1',\r\n          name: 'route path 1'\r\n        }, {\r\n          title: 'label 2',\r\n          name: 'route path 2'\r\n        }],\r\n        tabIndex: 2\r\n      }\r\n    },\r\n    methods: {\r\n      removeTab(targetName) {\r\n        let tabs = this.$store.state.home.tabs\r\n        let activeName = this.$store.state.home.nowRoute;\r\n        if (activeName === targetName) {\r\n          if(tabs.length>1){\r\n            tabs.forEach((tab, index) => {\r\n              if (tab.name === targetName) {\r\n                if(index!==0){\r\n                  this.$store.commit('SET_nowRoute', tabs[index-1].name)\r\n                  this.$router.push({name: this.$store.getters.nowRoute})\r\n                }else {\r\n                  this.$store.commit('SET_nowRoute', tabs[index+1].name)\r\n                  this.$router.push({name: this.$store.getters.nowRoute})\r\n                }\r\n              }\r\n            });\r\n          }else {\r\n            this.$store.commit('SET_nowRoute', 'home')\r\n            this.$router.push('/home')\r\n          }\r\n        }\r\n        this.$store.commit('SET_tabs', this.$store.state.home.tabs.filter(tab => tab.name !== targetName));\r\n      },\r\n      handleJump(tab) {\r\n        this.$emit('routeJump', tab.name)\r\n      }\r\n    },\r\n    computed: {\r\n      primary() {\r\n        if(!this.$store.state.home.nowRoute || this.$store.state.home.nowRoute==0) return 'primary'\r\n        else return ''\r\n      }\r\n    },\r\n    mounted() {\r\n      if(sessionFetch(tabsKey)) {\r\n        this.$store.commit(\"SET_tabs\", sessionFetch(tabsKey))\r\n      }\r\n    }\r\n  }\r\n",{"version":3,"sources":["systemTabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"systemTabs.vue","sourceRoot":"src/components/tabs","sourcesContent":["<template>\r\n<div>\r\n  <div class=\"my-tabs\">\r\n    <Tag @on-change=\"$router.push({name: 'home'})\" checkable class=\"home-tag\" type=\"dot\" :color=\"primary\">首页</Tag>\r\n    <el-tabs v-model=\"$store.state.home.nowRoute\" type=\"card\" closable\r\n      style=\"width:90%\"\r\n      @tab-remove=\"removeTab\"\r\n      @tab-click=\"handleJump\"\r\n      >\r\n      <el-tab-pane\r\n        v-for=\"(item, index) in $store.state.home.tabs\"\r\n        :key=\"`item.name_${index}`\"\r\n        :label=\"item.title\"\r\n        :name=\"item.name\"\r\n        >\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n  <slot name=\"content\" ></slot>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { sessionFetch, sessionSave, tabsKey } from \"^/storage\"\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        editableTabs2: [{\r\n          title: 'label 1',\r\n          name: 'route path 1'\r\n        }, {\r\n          title: 'label 2',\r\n          name: 'route path 2'\r\n        }],\r\n        tabIndex: 2\r\n      }\r\n    },\r\n    methods: {\r\n      removeTab(targetName) {\r\n        let tabs = this.$store.state.home.tabs\r\n        let activeName = this.$store.state.home.nowRoute;\r\n        if (activeName === targetName) {\r\n          if(tabs.length>1){\r\n            tabs.forEach((tab, index) => {\r\n              if (tab.name === targetName) {\r\n                if(index!==0){\r\n                  this.$store.commit('SET_nowRoute', tabs[index-1].name)\r\n                  this.$router.push({name: this.$store.getters.nowRoute})\r\n                }else {\r\n                  this.$store.commit('SET_nowRoute', tabs[index+1].name)\r\n                  this.$router.push({name: this.$store.getters.nowRoute})\r\n                }\r\n              }\r\n            });\r\n          }else {\r\n            this.$store.commit('SET_nowRoute', 'home')\r\n            this.$router.push('/home')\r\n          }\r\n        }\r\n        this.$store.commit('SET_tabs', this.$store.state.home.tabs.filter(tab => tab.name !== targetName));\r\n      },\r\n      handleJump(tab) {\r\n        this.$emit('routeJump', tab.name)\r\n      }\r\n    },\r\n    computed: {\r\n      primary() {\r\n        if(!this.$store.state.home.nowRoute || this.$store.state.home.nowRoute==0) return 'primary'\r\n        else return ''\r\n      }\r\n    },\r\n    mounted() {\r\n      if(sessionFetch(tabsKey)) {\r\n        this.$store.commit(\"SET_tabs\", sessionFetch(tabsKey))\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.my-tabs{\r\n  display: flex;\r\n  position: relative;\r\n  height: 41px;white-space:nowrap;\r\n  border-bottom: 1px solid #ddd;\r\n  overflow-y: hidden;\r\n}\r\n.home-tag{\r\n  height: 100%;\r\n  margin-left: 3px;\r\n  // margin-top: 4px\r\n}\r\n</style>"]}]}