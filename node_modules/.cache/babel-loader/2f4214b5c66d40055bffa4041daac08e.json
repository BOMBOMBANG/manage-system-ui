{"remainingRequest":"D:\\working\\manage-system-ui\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\working\\manage-system-ui\\src\\utils\\cookies.js","dependencies":[{"path":"D:\\working\\manage-system-ui\\src\\utils\\cookies.js","mtime":1560737036554},{"path":"D:\\working\\manage-system-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\manage-system-ui\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"D:\\\\working\\\\manage-system-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport _classCallCheck from \"D:\\\\working\\\\manage-system-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\working\\\\manage-system-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport Cookies from \"js-cookie\"; // if( process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'prod') {\n//   var domain = 'cduestc.uppower.org.cn'\n// }else if (process.env.NODE_ENV === 'test'){\n//   var domain = '47.107.121.144'\n// }else {\n//   var domain = 'localhost'\n// }\n\nvar CookieUtils =\n/*#__PURE__*/\nfunction () {\n  function CookieUtils() {\n    _classCallCheck(this, CookieUtils);\n\n    this.prefix = \"SCIENTIFIC_\"; // this.domain = domain;\n\n    this.expireTime = 1 / 6; //默认4小时\n  }\n  /**\r\n   *  @param key cookieKey 不能为对象那个\r\n   *  @param value cookieValue ,传对象需要JSON 序列化\r\n   *  @param expires 过期时间,注意: 需要单位是天 ex: 设置1小时: 1/24 或者 如果使用时间戳: newDate(new Date().getTime + timestamp) 不填默认4小时\r\n   *  @param path: 指定哪些路径 cookie 是可见的 不填默认 '/'\r\n   *  @param success 回调函数\r\n   *  @Param model model\r\n   */\n\n\n  _createClass(CookieUtils, [{\n    key: \"set\",\n    value: function set(model) {\n      var key = model.key,\n          value = model.value,\n          expires = model.expires,\n          path = model.path,\n          success = model.success;\n      CookieUtils.checkKey(key);\n      key = this.prefix + key;\n      Cookies.set(key, value, {\n        expires: expires || this.expireTime,\n        path: path || \"/\" // domain: this.domain\n\n      });\n      success && success();\n    }\n    /**\r\n     * 通过key 拿到cookie\r\n     * @param key cookieKey 不能为对象那个\r\n     * @returns {*}\r\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      CookieUtils.checkKey(key);\n      return Cookies.get(this.prefix + key);\n    }\n    /**\r\n     * 删除cookie\r\n     * @param key cookieKey\r\n     * @param path 指定删除cookie的路径 不填默认 '/'\r\n     * @param success 回调函数\r\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key, path, success) {\n      CookieUtils.checkKey(key);\n      Cookies.remove(this.prefix + key, {\n        path: path || \"/\" // domain: this.domain\n\n      });\n      success && success();\n    }\n  }], [{\n    key: \"checkKey\",\n    value: function checkKey(key) {\n      if (!key) {\n        throw new Error(\"没有找到key。\");\n      }\n\n      if (_typeof(key) === \"object\") {\n        throw new Error(\"key不能是一个对象。\");\n      }\n    }\n  }]);\n\n  return CookieUtils;\n}();\n\nexport var token = \"access_token\";\nexport var isFir = 'first_login';\nexport default new CookieUtils();",{"version":3,"sources":["D:\\working\\manage-system-ui\\src\\utils\\cookies.js"],"names":["Cookies","CookieUtils","prefix","expireTime","model","key","value","expires","path","success","checkKey","set","get","remove","Error","token","isFir"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,WAApB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,W;;;AAEJ,yBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,aAAd,CADY,CAEZ;;AACA,SAAKC,UAAL,GAAkB,IAAI,CAAtB,CAHY,CAGa;AAC1B;AAED;;;;;;;;;;;;wBAQIC,K,EAAO;AAAA,UACHC,GADG,GACoCD,KADpC,CACHC,GADG;AAAA,UACEC,KADF,GACoCF,KADpC,CACEE,KADF;AAAA,UACSC,OADT,GACoCH,KADpC,CACSG,OADT;AAAA,UACkBC,IADlB,GACoCJ,KADpC,CACkBI,IADlB;AAAA,UACwBC,OADxB,GACoCL,KADpC,CACwBK,OADxB;AAETR,MAAAA,WAAW,CAACS,QAAZ,CAAqBL,GAArB;AACAA,MAAAA,GAAG,GAAG,KAAKH,MAAL,GAAcG,GAApB;AACAL,MAAAA,OAAO,CAACW,GAAR,CAAYN,GAAZ,EAAiBC,KAAjB,EAAwB;AACtBC,QAAAA,OAAO,EAAEA,OAAO,IAAI,KAAKJ,UADH;AAEtBK,QAAAA,IAAI,EAAEA,IAAI,IAAI,GAFQ,CAGtB;;AAHsB,OAAxB;AAKAC,MAAAA,OAAO,IAAIA,OAAO,EAAlB;AACD;AAED;;;;;;;;wBAKIJ,G,EAAK;AACPJ,MAAAA,WAAW,CAACS,QAAZ,CAAqBL,GAArB;AACA,aAAOL,OAAO,CAACY,GAAR,CAAY,KAAKV,MAAL,GAAcG,GAA1B,CAAP;AACD;AAED;;;;;;;;;2BAMOA,G,EAAKG,I,EAAMC,O,EAAS;AACzBR,MAAAA,WAAW,CAACS,QAAZ,CAAqBL,GAArB;AACAL,MAAAA,OAAO,CAACa,MAAR,CAAe,KAAKX,MAAL,GAAcG,GAA7B,EAAkC;AAChCG,QAAAA,IAAI,EAAEA,IAAI,IAAI,GADkB,CAEhC;;AAFgC,OAAlC;AAIAC,MAAAA,OAAO,IAAIA,OAAO,EAAlB;AACD;;;6BAEeJ,G,EAAK;AACnB,UAAI,CAACA,GAAL,EAAU;AACR,cAAM,IAAIS,KAAJ,CAAU,UAAV,CAAN;AACD;;AACD,UAAI,QAAOT,GAAP,MAAe,QAAnB,EAA6B;AAC3B,cAAM,IAAIS,KAAJ,CAAU,aAAV,CAAN;AACD;AACF;;;;;;AAGH,OAAO,IAAMC,KAAK,GAAG,cAAd;AACP,OAAO,IAAMC,KAAK,GAAG,aAAd;AACP,eAAe,IAAIf,WAAJ,EAAf","sourcesContent":["import Cookies from \"js-cookie\";\r\n// if( process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'prod') {\r\n//   var domain = 'cduestc.uppower.org.cn'\r\n// }else if (process.env.NODE_ENV === 'test'){\r\n//   var domain = '47.107.121.144'\r\n// }else {\r\n//   var domain = 'localhost'\r\n// }\r\n\r\nclass CookieUtils {\r\n  \r\n  constructor() {\r\n    this.prefix = \"SCIENTIFIC_\";\r\n    // this.domain = domain;\r\n    this.expireTime = 1 / 6; //默认4小时\r\n  }\r\n\r\n  /**\r\n   *  @param key cookieKey 不能为对象那个\r\n   *  @param value cookieValue ,传对象需要JSON 序列化\r\n   *  @param expires 过期时间,注意: 需要单位是天 ex: 设置1小时: 1/24 或者 如果使用时间戳: newDate(new Date().getTime + timestamp) 不填默认4小时\r\n   *  @param path: 指定哪些路径 cookie 是可见的 不填默认 '/'\r\n   *  @param success 回调函数\r\n   *  @Param model model\r\n   */\r\n  set(model) {\r\n    let { key, value, expires, path, success } = model;\r\n    CookieUtils.checkKey(key);\r\n    key = this.prefix + key;\r\n    Cookies.set(key, value, {\r\n      expires: expires || this.expireTime,\r\n      path: path || \"/\",\r\n      // domain: this.domain\r\n    });\r\n    success && success();\r\n  }\r\n\r\n  /**\r\n   * 通过key 拿到cookie\r\n   * @param key cookieKey 不能为对象那个\r\n   * @returns {*}\r\n   */\r\n  get(key) {\r\n    CookieUtils.checkKey(key);\r\n    return Cookies.get(this.prefix + key);\r\n  }\r\n\r\n  /**\r\n   * 删除cookie\r\n   * @param key cookieKey\r\n   * @param path 指定删除cookie的路径 不填默认 '/'\r\n   * @param success 回调函数\r\n   */\r\n  remove(key, path, success) {\r\n    CookieUtils.checkKey(key);\r\n    Cookies.remove(this.prefix + key, {\r\n      path: path || \"/\",\r\n      // domain: this.domain\r\n    });\r\n    success && success();\r\n  }\r\n\r\n  static checkKey(key) {\r\n    if (!key) {\r\n      throw new Error(\"没有找到key。\");\r\n    }\r\n    if (typeof key === \"object\") {\r\n      throw new Error(\"key不能是一个对象。\");\r\n    }\r\n  }\r\n}\r\n\r\nexport const token = \"access_token\"\r\nexport const isFir = 'first_login'\r\nexport default new CookieUtils();\r\n"]}]}