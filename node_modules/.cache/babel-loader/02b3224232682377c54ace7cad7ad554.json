{"remainingRequest":"D:\\working\\manage-system-ui\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\working\\manage-system-ui\\src\\mixins\\index.js","dependencies":[{"path":"D:\\working\\manage-system-ui\\src\\mixins\\index.js","mtime":1560741086932},{"path":"D:\\working\\manage-system-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\manage-system-ui\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { sessionSave, tabsKey } from \"^/storage\"; //带参数页面跳转\n\nexport var paramRouteJump = {\n  methods: {\n    paramRouteJump: function paramRouteJump(routeName, title, id) {\n      this.$store.commit('PUSH_tabs', {\n        'name': routeName,\n        'title': title,\n        'params': id\n      });\n      sessionSave(tabsKey, this.$store.state.home.tabs);\n      this.$store.commit('SET_nowRoute', routeName);\n      this.$router.push({\n        name: routeName,\n        params: {\n          id: id\n        }\n      });\n    }\n  } //webSocket\n\n};\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nexport var webSocket = {\n  data: function data() {\n    return {\n      stompClient: '',\n      timer: ''\n    };\n  },\n  methods: {\n    initWebSocket: function initWebSocket() {\n      this.connection();\n      var that = this;\n    },\n    connection: function connection() {\n      var _this = this;\n\n      // 建立连接对象\n      var socket = new SockJS(this.$store.state.home.hostname + '/websocket'); // 获取STOMP子协议的客户端对象\n\n      this.stompClient = Stomp.over(socket); // 定义客户端的认证信息,按需求配置\n\n      var headers = {\n        Authorization: '' // 向服务器发起websocket连接\n\n      };\n      this.stompClient.connect(headers, function () {\n        _this.stompClient.subscribe('/topic/pullMessage', function (msg) {\n          // 订阅服务端提供的某个topic\n          // console.log('广播成功')\n          // console.log(msg);  // msg.body存放的是服务端发送给我们的信息\n          var res = JSON.parse(msg.body);\n\n          _this.$store.commit('SET_socketData', res); // console.log(res, 'res');\n\n        }, headers);\n      }, function (err) {// 连接发生错误时的处理函数\n        // console.log('失败')\n        // console.log(err);\n      });\n    },\n    //连接 后台\n    disconnect: function disconnect() {\n      if (this.stompClient) {\n        this.stompClient.disconnect();\n      }\n    } // 断开连接\n\n  } //引导\n\n};\nexport var createDriver = {\n  methods: {\n    createDriver: function createDriver() {\n      var _this2 = this;\n\n      return new Driver({\n        closeBtnText: '关闭引导',\n        // Text on the close button for this step\n        stageBackground: '#ffffff',\n        // Background color for the staged behind highlighted element\n        nextBtnText: '下一步',\n        // Next button text for this step\n        prevBtnText: '上一步',\n        doneBtnText: '完成',\n        onReset: function onReset() {\n          _this2.driving = false;\n        }\n      });\n    }\n  } //各个页面引导的配置\n\n};\nexport var openDriver = {\n  methods: {//之前项目的一个引导配置例子，可以作为参考\n    // driverHome() {\n    //   let driver = this.createDriver()\n    //   driver.defineSteps([\n    //     {\n    //       element: '#modal-step-nav',\n    //       popover: {\n    //         title: '菜单',\n    //         description: '您可以在菜单栏选择相应的功能,菜单栏可以收缩和展开',\n    //         position: 'right',\n    //         offset: 20\n    //       }\n    //     },\n    //     {\n    //       element: '#modal-step-numbers',\n    //       popover: {\n    //         title: '数据统计',\n    //         description: '数据统计栏是展示当年您的科研成果,包括当年当前的积分和总业绩数,意思您在部门中的排名',\n    //         position: 'top',\n    //         offset: 20\n    //       }\n    //     },\n    //     {\n    //       element: '#modal-step-notice',\n    //       popover: {\n    //         title: '通知',\n    //         description: '通知栏是显示关于科研教研最新通知咨询的地方,您可以点击每一个通知查看具体信息',\n    //         position: 'left',\n    //         offset: 100\n    //       }\n    //     },\n    //     {\n    //       element: '#model-step-score-statistics',\n    //       popover: {\n    //         title: '积分统计',\n    //         description: '积分统计栏是显示您当年上传所有业绩的组成和您的积分占系内所有成员的占比',\n    //         position: 'left',\n    //         offset: 100\n    //       }\n    //     }\n    //   ])\n    //   driver.start()\n    // }\n  }\n};",{"version":3,"sources":["D:\\working\\manage-system-ui\\src\\mixins\\index.js"],"names":["sessionSave","tabsKey","paramRouteJump","methods","routeName","title","id","$store","commit","state","home","tabs","$router","push","name","params","SockJS","Stomp","webSocket","data","stompClient","timer","initWebSocket","connection","that","socket","hostname","over","headers","Authorization","connect","subscribe","msg","res","JSON","parse","body","err","disconnect","createDriver","Driver","closeBtnText","stageBackground","nextBtnText","prevBtnText","doneBtnText","onReset","driving","openDriver"],"mappings":"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","sourcesContent":["import { sessionSave, tabsKey } from \"^/storage\"\r\n\r\n//带参数页面跳转\r\nexport const paramRouteJump = {\r\n  methods: {\r\n    paramRouteJump(routeName ,title, id) {\r\n      this.$store.commit('PUSH_tabs', {\r\n        'name': routeName,\r\n        'title': title,\r\n        'params': id\r\n      })\r\n      sessionSave(tabsKey, this.$store.state.home.tabs)\r\n      this.$store.commit('SET_nowRoute', routeName)\r\n      this.$router.push({\r\n        name: routeName,\r\n        params: {\r\n          id: id\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n//webSocket\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"stompjs\";\r\nexport const webSocket = {\r\ndata(){\r\n  return {\r\n    stompClient:'',\r\n    timer:''\r\n  }\r\n},\r\nmethods:{\r\n    initWebSocket() {\r\n      this.connection();\r\n      let that= this;\r\n    },  \r\n    connection() {\r\n        // 建立连接对象\r\n      let socket = new SockJS(this.$store.state.home.hostname+'/websocket');\r\n      // 获取STOMP子协议的客户端对象\r\n      this.stompClient = Stomp.over(socket);\r\n      // 定义客户端的认证信息,按需求配置\r\n      let headers = {\r\n        Authorization:''\r\n      }\r\n      // 向服务器发起websocket连接\r\n      this.stompClient.connect(headers,() => {\r\n        this.stompClient.subscribe('/topic/pullMessage', (msg) => { // 订阅服务端提供的某个topic\r\n          // console.log('广播成功')\r\n          // console.log(msg);  // msg.body存放的是服务端发送给我们的信息\r\n          let res = JSON.parse(msg.body)\r\n          this.$store.commit('SET_socketData', res)\r\n          // console.log(res, 'res');\r\n        },headers)\r\n      }, (err) => {\r\n        // 连接发生错误时的处理函数\r\n        // console.log('失败')\r\n        // console.log(err);\r\n      })\r\n    },    //连接 后台\r\n    disconnect() {\r\n      if (this.stompClient) {\r\n        this.stompClient.disconnect();\r\n      }\r\n    }  // 断开连接\r\n  }\r\n}\r\n//引导\r\nexport const createDriver = {\r\n  methods: {\r\n    createDriver() {\r\n      return new Driver({\r\n        closeBtnText: '关闭引导',            // Text on the close button for this step\r\n        stageBackground: '#ffffff',       // Background color for the staged behind highlighted element\r\n        nextBtnText: '下一步',              // Next button text for this step\r\n        prevBtnText: '上一步', \r\n        doneBtnText: '完成',\r\n        onReset: () => {\r\n          this.driving = false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n//各个页面引导的配置\r\nexport const openDriver = {\r\n  methods: {\r\n  //之前项目的一个引导配置例子，可以作为参考\r\n    // driverHome() {\r\n    //   let driver = this.createDriver()\r\n    //   driver.defineSteps([\r\n    //     {\r\n    //       element: '#modal-step-nav',\r\n    //       popover: {\r\n    //         title: '菜单',\r\n    //         description: '您可以在菜单栏选择相应的功能,菜单栏可以收缩和展开',\r\n    //         position: 'right',\r\n    //         offset: 20\r\n    //       }\r\n    //     },\r\n    //     {\r\n    //       element: '#modal-step-numbers',\r\n    //       popover: {\r\n    //         title: '数据统计',\r\n    //         description: '数据统计栏是展示当年您的科研成果,包括当年当前的积分和总业绩数,意思您在部门中的排名',\r\n    //         position: 'top',\r\n    //         offset: 20\r\n    //       }\r\n    //     },\r\n    //     {\r\n    //       element: '#modal-step-notice',\r\n    //       popover: {\r\n    //         title: '通知',\r\n    //         description: '通知栏是显示关于科研教研最新通知咨询的地方,您可以点击每一个通知查看具体信息',\r\n    //         position: 'left',\r\n    //         offset: 100\r\n    //       }\r\n    //     },\r\n    //     {\r\n    //       element: '#model-step-score-statistics',\r\n    //       popover: {\r\n    //         title: '积分统计',\r\n    //         description: '积分统计栏是显示您当年上传所有业绩的组成和您的积分占系内所有成员的占比',\r\n    //         position: 'left',\r\n    //         offset: 100\r\n    //       }\r\n    //     }\r\n    //   ])\r\n    //   driver.start()\r\n    // }\r\n  }\r\n}"]}]}